{"version":3,"file":"static/js/906.e386f58d.chunk.js","mappings":"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","sources":["components/shared/components/Button/Button.jsx","components/shared/components/TextField/TextField.jsx","webpack://react-homework-template/./src/components/modules/Section/section.module.scss?b1fa","components/modules/Section/Section.jsx","../node_modules/@mui/icons-material/esm/Clear.js","../node_modules/@mui/icons-material/esm/Person.js","../node_modules/@mui/icons-material/esm/Phone.js","webpack://react-homework-template/./src/components/modules/ListItem/list-item.module.scss?e4b6","components/modules/ListItem/ListItem.jsx","redux/contacts/contacts-selectors.js","webpack://react-homework-template/./src/components/modules/ContactList/contact-list.module.scss?e3ae","components/modules/ContactList/ContactList.jsx","components/modules/Filter/Filter.jsx","redux/filter/filter-selectors.js","webpack://react-homework-template/./src/components/modules/Contacts/contacts.module.scss?64bd","../node_modules/@mui/system/esm/styleFunctionSx/extendSxProp.js","../node_modules/@mui/system/esm/createBox.js","../node_modules/@mui/material/Box/Box.js","components/modules/ContactForm/initialState.js","webpack://react-homework-template/./src/components/modules/ContactForm/contacts-form.module.scss?f736","components/modules/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/shared/components/Modal/Modal/modal.module.scss?e46e","components/shared/components/Modal/Modal/Modal.jsx","components/modules/Contacts/Contacts.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import * as React from 'react';\nimport Button from '@mui/material/Button';\n\nconst MyButton = ({ children, size, type = 'submit', onClick, ...props }) => {\n  return (\n    <Button className={props.style} size={size} onClick={onClick} type={type}>\n      {children}{' '}\n    </Button>\n  );\n};\n\nexport default MyButton;\n","import { useMemo } from 'react';\n\nimport { nanoid } from 'nanoid';\n\nimport { TextField } from '@mui/material';\n// import css from './text.module.scss';\n\nconst MyTextField = ({ label, name, handleChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n  const inputName = useMemo(() => name || id, [name, id]);\n\n  return (\n    <TextField\n      fullWidth\n      margin=\"normal\"\n      label={label}\n      variant=\"filled\"\n      name={inputName}\n      id={id}\n      onChange={handleChange}\n      {...props}\n    />\n  );\n};\n\nexport default MyTextField;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"section_section__Ytira\",\"form\":\"section_form__KEXmz\",\"header\":\"section_header__vtq7c\",\"title\":\"section_title__S0sev\"};","import PropTypes from 'prop-types';\n\nimport css from './section.module.scss';\n\nfunction Section({ title, children, ...props }) {\n  const { button, style } = props;\n  return (\n    <section className={`${css.section} ${style}`}>\n      <div className={css.header}>\n        {title && <h2 className={css.title}>{title}</h2>}\n        {button}\n      </div>\n      {children}\n    </section>\n  );\n}\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02l-2.2 2.2z\"\n}), 'Phone');","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"list-item_listItem__ynxBH\",\"text\":\"list-item_text__oTwJB\",\"data\":\"list-item_data__r4YPF\",\"contactField\":\"list-item_contactField__8dfH1\",\"delBtn\":\"list-item_delBtn__0yoG9\"};","import PropTypes from 'prop-types';\n\nimport { List, SvgIcon } from '@mui/material';\nimport { Clear } from '@mui/icons-material';\n\nimport { Person, Phone } from '@mui/icons-material';\nimport css from './list-item.module.scss';\n\nfunction MyListItem({ onDeleteContact, contact }) {\n  return (\n    <List className={css.listItem}>\n      <p className={css.text}>\n        <span className={css.contactField}>\n          <SvgIcon sx={{ fontSize: 15 }}>\n            <Person />\n          </SvgIcon>\n          <span className={css.data}>{contact.name}</span>\n        </span>\n        <br />\n        <span className={css.contactField}>\n          <SvgIcon\n            sx={{\n              fontSize: 15,\n            }}\n          >\n            <Phone />\n          </SvgIcon>\n          <span className={css.data}>{contact.number}</span>\n        </span>\n      </p>\n\n      <button\n        className={css.delBtn}\n        type=\"button\"\n        onClick={() => onDeleteContact(contact.id)}\n      >\n        <SvgIcon\n          sx={{\n            fontSize: 20,\n            color: 'red',\n          }}\n        >\n          <Clear />\n        </SvgIcon>\n      </button>\n    </List>\n  );\n}\n\nexport default MyListItem;\n\nMyListItem.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }),\n};\n","export const getContacts = ({ contacts }) => contacts.items;\n\nexport const getfilteredContacts = ({ contacts, filter }) => {\n  const copySortArr = [...contacts.items];\n  const sortedContacts = copySortArr.sort((a, b) => {\n    const nameA = a.name.toUpperCase();\n    const nameB = b.name.toUpperCase();\n    if (nameA < nameB) {\n      return -1;\n    }\n    if (nameA > nameB) {\n      return 1;\n    }\n\n    return 0;\n  });\n\n  if (!filter) {\n    return sortedContacts;\n  }\n  const normalizedFilter = filter.toLowerCase();\n  return sortedContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"contact-list_list__+6N15\"};","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport MyListItem from 'components/modules/ListItem/ListItem';\nimport { getfilteredContacts } from 'redux/contacts/contacts-selectors';\n\nimport css from './contact-list.module.scss';\n\nfunction ContactList({ onDeleteContact }) {\n  const visible = useSelector(getfilteredContacts);\n\n  return (\n    <ul className={css.list}>\n      {visible.map(contact => {\n        return (\n          <MyListItem\n            onDeleteContact={onDeleteContact}\n            contact={contact}\n            key={contact.id}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default ContactList;\n\nContactList.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport TextField from 'components/shared/components/TextField/TextField';\n\nfunction Filter({ filter, onChangeFilter }) {\n  return (\n    <label>\n      <TextField\n        sx={{\n          '& .MuiInputBase-input': {\n            border: '0',\n            padding: '10px',\n          },\n        }}\n        placeholder=\"Find contacts by name\"\n        type=\"text\"\n        value={filter}\n        name=\"filter\"\n        onChange={onChangeFilter}\n        autoComplete=\"off\"\n      />\n    </label>\n  );\n}\n\nexport default Filter;\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n","export const getFilter = ({ filter }) => filter;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"contacts_wrapper__YO7U4\",\"formal\":\"contacts_formal__-Ytfr\",\"addContactBtn\":\"contacts_addContactBtn__B--6Y\"};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sx\"];\nimport { isPlainObject } from '@mui/utils';\nimport defaultSxConfig from './defaultSxConfig';\nconst splitProps = props => {\n  var _props$theme$unstable, _props$theme;\n  const result = {\n    systemProps: {},\n    otherProps: {}\n  };\n  const config = (_props$theme$unstable = props == null ? void 0 : (_props$theme = props.theme) == null ? void 0 : _props$theme.unstable_sxConfig) != null ? _props$theme$unstable : defaultSxConfig;\n  Object.keys(props).forEach(prop => {\n    if (config[prop]) {\n      result.systemProps[prop] = props[prop];\n    } else {\n      result.otherProps[prop] = props[prop];\n    }\n  });\n  return result;\n};\nexport default function extendSxProp(props) {\n  const {\n      sx: inSx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    systemProps,\n    otherProps\n  } = splitProps(other);\n  let finalSx;\n  if (Array.isArray(inSx)) {\n    finalSx = [systemProps, ...inSx];\n  } else if (typeof inSx === 'function') {\n    finalSx = (...args) => {\n      const result = inSx(...args);\n      if (!isPlainObject(result)) {\n        return systemProps;\n      }\n      return _extends({}, systemProps, result);\n    };\n  } else {\n    finalSx = _extends({}, systemProps, inSx);\n  }\n  return _extends({}, otherProps, {\n    sx: finalSx\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const _extendSxProp = extendSxProp(inProps),\n      {\n        className,\n        component = 'div'\n      } = _extendSxProp,\n      other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: theme\n    }, other));\n  });\n  return Box;\n}","import { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  defaultTheme,\n  defaultClassName: 'MuiBox-root',\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","const initialState = {\n  name: '',\n  number: '',\n};\n\nexport default initialState;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"contacts-form_form__YZ371\",\"addButton\":\"contacts-form_addButton__ppq06\"};","import PropTypes from 'prop-types';\n\nimport { useState } from 'react';\n\nimport TextField from 'components/shared/components/TextField/TextField';\nimport initialState from './initialState';\n\nimport css from './contacts-form.module.scss';\nimport Button from 'components/shared/components/Button/Button';\n\nconst ContactForm = ({ onSubmit }) => {\n  const [formState, setFormState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setFormState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    onSubmit({ ...formState });\n    setFormState({ ...initialState });\n  };\n\n  const { name, number } = formState;\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <label className={css.label}>\n        <TextField\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label className={css.label}>\n        <TextField\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Phone\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n\n      <Button type=\"submit\" size=\"small\" style={css.addButton}>\n        Add\n      </Button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"modal_modal__MpoEi\",\"modalTitle\":\"modal_modalTitle__Gv-Ar\"};","import { useState, useEffect, useCallback } from 'react';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\n\nimport ContactForm from 'components/modules/ContactForm/ContactForm';\n\nimport css from './modal.module.scss';\n\nconst style = {\n  bgcolor: 'background.paper',\n  boxShadow: 24,\n};\n\nconst BasicModal = ({ openBcdrp, onOpenBcdrp, onSubmit }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = useCallback(() => {\n    setOpen(false);\n    onOpenBcdrp(false);\n  }, [onOpenBcdrp]);\n\n  useEffect(() => {\n    if (!openBcdrp) {\n      handleClose();\n      return;\n    }\n    handleOpen();\n  }, [handleClose, openBcdrp]);\n\n  return (\n    <div>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box className={css.modal} sx={style}>\n          <h3 className={css.modalTitle}>New contact</h3>\n          <ContactForm onSubmit={onSubmit} />\n        </Box>\n      </Modal>\n    </div>\n  );\n};\n\nexport default BasicModal;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\nimport Section from '../Section/Section';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\n\nimport {\n  fetchAllContacts,\n  fetchAddContact,\n  fetchDeleteContact,\n} from 'redux/contacts/contacts-operations';\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { getfilteredContacts } from 'redux/contacts/contacts-selectors';\nimport { getFilter } from 'redux/filter/filter-selectors';\n\nimport css from './contacts.module.scss';\nimport Button from 'components/shared/components/Button/Button';\nimport BasicModal from 'components/shared/components/Modal/Modal/Modal';\n\nconst Contacts = () => {\n  const filteredContacts = useSelector(getfilteredContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const [addContactBtn, setAddContactBtn] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const onAddContact = contactData => {\n    dispatch(fetchAddContact(contactData));\n    setAddContactBtn(false);\n  };\n\n  const onDeleteContact = contactId => {\n    dispatch(fetchDeleteContact(contactId));\n    const action = setFilter('');\n    dispatch(action);\n  };\n\n  const changeFilter = ({ target }) => {\n    const { value } = target;\n    const action = setFilter(value);\n    dispatch(action);\n  };\n\n  const handleAddContactBtn = () => {\n    setAddContactBtn(!addContactBtn);\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <Section\n        title=\"Contacts\"\n        button={\n          <Button\n            style={css.addContactBtn}\n            onClick={handleAddContactBtn}\n            children={'Add new'}\n          />\n        }\n      >\n        <Filter filter={filter} onChangeFilter={changeFilter} />\n        <ContactList\n          onDeleteContact={onDeleteContact}\n          filteredContacts={filteredContacts}\n        />\n      </Section>\n      <BasicModal\n        onSubmit={onAddContact}\n        openBcdrp={addContactBtn}\n        onOpenBcdrp={setAddContactBtn}\n      />\n    </div>\n  );\n};\n\nexport default Contacts;\n","import Contacts from 'components/modules/Contacts/Contacts';\n\nconst ContactsPage = () => {\n  return <Contacts />;\n};\n\nexport default ContactsPage;\n"],"names":["children","size","type","onClick","props","className","style","label","name","handleChange","id","useMemo","nanoid","inputName","fullWidth","margin","variant","onChange","title","button","css","createSvgIcon","_jsx","d","onDeleteContact","contact","List","SvgIcon","sx","fontSize","Person","Phone","number","color","Clear","getfilteredContacts","contacts","filter","sortedContacts","items","sort","a","b","nameA","toUpperCase","nameB","normalizedFilter","toLowerCase","includes","visible","useSelector","map","onChangeFilter","TextField","border","padding","placeholder","value","autoComplete","getFilter","_excluded","extendSxProp","finalSx","inSx","_props$theme$unstable","_props$theme","result","systemProps","otherProps","config","theme","unstable_sxConfig","defaultSxConfig","Object","keys","forEach","prop","splitProps","_objectWithoutPropertiesLoose","Array","isArray","isPlainObject","_extends","Box","options","defaultTheme","defaultClassName","generateClassName","BoxRoot","styled","shouldForwardProp","styleFunctionSx","React","inProps","ref","useTheme","_extendSxProp","component","other","as","clsx","createBox","createTheme","ClassNameGenerator","onSubmit","useState","initialState","formState","setFormState","target","prevState","evt","preventDefault","pattern","required","Button","bgcolor","boxShadow","openBcdrp","onOpenBcdrp","open","setOpen","handleClose","useCallback","useEffect","Modal","onClose","filteredContacts","dispatch","useDispatch","addContactBtn","setAddContactBtn","fetchAllContacts","action","setFilter","contactId","fetchDeleteContact","contactData","fetchAddContact"],"sourceRoot":""}