{"version":3,"file":"static/js/41.6712f373.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/shared/components/Button/button.module.scss?9c49","components/shared/components/Button/Button.jsx","components/shared/components/TextField/TextField.jsx","webpack://react-homework-template/./src/components/modules/Section/section.module.scss?b1fa","components/modules/Section/Section.jsx","components/modules/ContactForm/initialState.js","webpack://react-homework-template/./src/components/modules/ContactForm/contacts-form.module.scss?f736","components/modules/ContactForm/ContactForm.jsx","../node_modules/@mui/icons-material/esm/Clear.js","../node_modules/@mui/icons-material/esm/Person.js","../node_modules/@mui/icons-material/esm/Phone.js","webpack://react-homework-template/./src/components/modules/ListItem/list-item.module.scss?e4b6","components/modules/ListItem/ListItem.jsx","redux/contacts/contacts-selectors.js","webpack://react-homework-template/./src/components/modules/ContactList/contact-list.module.scss?e3ae","components/modules/ContactList/ContactList.jsx","components/modules/Filter/Filter.jsx","redux/filter/filter-selectors.js","webpack://react-homework-template/./src/components/modules/Contacts/contacts.module.scss?64bd","components/modules/Contacts/Contacts.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"button_button__lXCnD\"};","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport css from './button.module.scss';\n\nconst MyButton = ({ children, size, type = 'submit', onClick, ...props }) => {\n  return (\n    <Button\n      size={size}\n      className={`${css.button} ${props.style}`}\n      onClick={onClick}\n      type={type}\n    >\n      {children}{' '}\n    </Button>\n  );\n};\n\nexport default MyButton;\n","import { useMemo } from 'react';\n\nimport { nanoid } from 'nanoid';\n\nimport { TextField } from '@mui/material';\n// import css from './text.module.scss';\n\nconst MyTextField = ({ label, name, handleChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n  const inputName = useMemo(() => name || id, [name, id]);\n\n  return (\n    <TextField\n      fullWidth\n      margin=\"normal\"\n      label={label}\n      variant=\"filled\"\n      name={inputName}\n      id={id}\n      onChange={handleChange}\n      {...props}\n    />\n  );\n};\n\nexport default MyTextField;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"section_section__Ytira\",\"form\":\"section_form__KEXmz\",\"header\":\"section_header__vtq7c\",\"title\":\"section_title__S0sev\"};","import PropTypes from 'prop-types';\n\nimport css from './section.module.scss';\n\nfunction Section({ title, children, ...props }) {\n  const { button, style } = props;\n  return (\n    <section className={`${css.section} ${style}`}>\n      <div className={css.header}>\n        {title && <h2 className={css.title}>{title}</h2>}\n        {button}\n      </div>\n      {children}\n    </section>\n  );\n}\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","const initialState = {\n  name: '',\n  number: '',\n};\n\nexport default initialState;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"contacts-form_form__YZ371\",\"addButton\":\"contacts-form_addButton__ppq06\"};","import PropTypes from 'prop-types';\n\nimport { useState } from 'react';\n\nimport TextField from 'components/shared/components/TextField/TextField';\nimport initialState from './initialState';\n\nimport css from './contacts-form.module.scss';\nimport Button from 'components/shared/components/Button/Button';\n\nconst ContactForm = ({ onSubmit }) => {\n  const [formState, setFormState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setFormState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    onSubmit({ ...formState });\n    setFormState({ ...initialState });\n  };\n\n  const { name, number } = formState;\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <label className={css.label}>\n        <TextField\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label className={css.label}>\n        <TextField\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Phone\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      {name && (\n        <Button type=\"submit\" style={css.addButton}>\n          Add\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02l-2.2 2.2z\"\n}), 'Phone');","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"list-item_listItem__ynxBH\",\"text\":\"list-item_text__oTwJB\",\"contactField\":\"list-item_contactField__8dfH1\"};","import PropTypes from 'prop-types';\n\nimport { List, SvgIcon } from '@mui/material';\nimport { Clear } from '@mui/icons-material';\nimport MyButton from 'components/shared/components/Button/Button';\n\nimport { Person, Phone } from '@mui/icons-material';\nimport css from './list-item.module.scss';\n\nfunction MyListItem({ onDeleteContact, contact }) {\n  return (\n    <List className={css.listItem}>\n      <p className={css.text}>\n        <span className={css.contactField}>\n          <SvgIcon sx={{ fontSize: 15 }}>\n            <Person />\n          </SvgIcon>\n          {contact.name}\n        </span>\n        <br />\n        <span className={css.contactField}>\n          <SvgIcon\n            sx={{\n              fontSize: 15,\n            }}\n          >\n            <Phone />\n          </SvgIcon>\n          {contact.number}\n        </span>\n      </p>\n      <MyButton type=\"button\" onClick={() => onDeleteContact(contact.id)}>\n        <SvgIcon\n          sx={{\n            fontSize: 20,\n            color: 'blue',\n          }}\n        >\n          <Clear />\n        </SvgIcon>\n      </MyButton>\n    </List>\n  );\n}\n\nexport default MyListItem;\n\nMyListItem.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }),\n};\n","export const getContacts = ({ contacts }) => contacts.items;\nexport const getfilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"contact-list_list__+6N15\"};","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport MyListItem from 'components/modules/ListItem/ListItem';\nimport { getfilteredContacts } from 'redux/contacts/contacts-selectors';\n\nimport css from './contact-list.module.scss';\n\nfunction ContactList({ onDeleteContact }) {\n  const visible = useSelector(getfilteredContacts);\n\n  return (\n    <ul className={css.list}>\n      {visible.map(contact => {\n        return (\n          <MyListItem\n            onDeleteContact={onDeleteContact}\n            contact={contact}\n            key={contact.id}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default ContactList;\n\nContactList.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport TextField from 'components/shared/components/TextField/TextField';\n\nfunction Filter({ filter, onChangeFilter }) {\n  return (\n    <label>\n      <TextField\n        sx={{\n          '& .MuiInputBase-input': {\n            border: '0',\n            padding: '10px',\n          },\n        }}\n        placeholder=\"Find contacts by name\"\n        type=\"text\"\n        value={filter}\n        name=\"filter\"\n        onChange={onChangeFilter}\n        autoComplete=\"off\"\n      />\n    </label>\n  );\n}\n\nexport default Filter;\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n","export const getFilter = ({ filter }) => filter;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"contacts_wrapper__YO7U4\",\"formal\":\"contacts_formal__-Ytfr\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\nimport Section from '../Section/Section';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\n\nimport {\n  fetchAllContacts,\n  fetchAddContact,\n  fetchDeleteContact,\n} from 'redux/contacts/contacts-operations';\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { getfilteredContacts } from 'redux/contacts/contacts-selectors';\nimport { getFilter } from 'redux/filter/filter-selectors';\n\nimport css from './contacts.module.scss';\nimport Button from 'components/shared/components/Button/Button';\n\nconst Contacts = () => {\n  const filteredContacts = useSelector(getfilteredContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const [addContactBtn, setAddContactBtn] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const onAddContact = contactData => {\n    dispatch(fetchAddContact(contactData));\n  };\n\n  const onDeleteContact = contactId => {\n    dispatch(fetchDeleteContact(contactId));\n    const action = setFilter('');\n    dispatch(action);\n  };\n\n  const changeFilter = ({ target }) => {\n    const { value } = target;\n    const action = setFilter(value);\n    dispatch(action);\n  };\n\n  const handleAddContactBtn = () => {\n    setAddContactBtn(!addContactBtn);\n  };\n\n  return (\n    <div className={css.wrapper}>\n      {addContactBtn && (\n        <Section\n          style={css.formal}\n          title=\"Add contact\"\n          button={\n            <Button\n              // size=\"large\"\n              onClick={handleAddContactBtn}\n              children={addContactBtn && 'Hide'}\n            />\n          }\n        >\n          <ContactForm onSubmit={onAddContact} />\n        </Section>\n      )}\n      <Section\n        title=\"Contacts\"\n        button={\n          !addContactBtn && (\n            <Button\n              // size={'small'}\n              onClick={handleAddContactBtn}\n              children={!addContactBtn && 'Add contact'}\n            />\n          )\n        }\n      >\n        <Filter filter={filter} onChangeFilter={changeFilter} />\n        <ContactList\n          onDeleteContact={onDeleteContact}\n          filteredContacts={filteredContacts}\n        />\n      </Section>\n    </div>\n  );\n};\n\nexport default Contacts;\n","import Contacts from 'components/modules/Contacts/Contacts';\n\nconst ContactsPage = () => {\n  return <Contacts />;\n};\n\nexport default ContactsPage;\n"],"names":["children","size","type","onClick","props","Button","className","css","style","label","name","handleChange","id","useMemo","nanoid","inputName","fullWidth","margin","variant","onChange","title","button","number","onSubmit","useState","initialState","formState","setFormState","target","value","prevState","evt","preventDefault","TextField","placeholder","pattern","required","createSvgIcon","_jsx","d","onDeleteContact","contact","List","SvgIcon","sx","fontSize","Person","Phone","color","Clear","getfilteredContacts","contacts","filter","items","normalizedFilter","toLowerCase","includes","visible","useSelector","map","onChangeFilter","border","padding","autoComplete","getFilter","filteredContacts","dispatch","useDispatch","addContactBtn","setAddContactBtn","useEffect","fetchAllContacts","handleAddContactBtn","contactData","fetchAddContact","action","setFilter","contactId","fetchDeleteContact"],"sourceRoot":""}